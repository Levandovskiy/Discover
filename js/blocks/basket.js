// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—Ä–∑–∏–Ω—ñ
const container = document.querySelector("#cart-items-container");

if (!container) {
  console.error("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #cart-items-container –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!");
}

// –ú–∞—Å–∏–≤ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—Ä–∑–∏–Ω—ñ
let cart = [];

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏ –≤ localStorage
function saveCart() {
  localStorage.setItem("cart", JSON.stringify(cart));
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏ –∑ localStorage
function loadCart() {
  const savedCart = localStorage.getItem("cart");
  if (savedCart) {
    cart = JSON.parse(savedCart);
  }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—Ä–∑–∏–Ω—ñ
function renderItems() {
  container.innerHTML = ""; // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–æ–º

  if (cart.length === 0) {
    container.innerHTML = "<p>–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è</p>";
    return;
  }

  cart.forEach((product) => {
    const html = `
      <div class="cart-item">
        <div class="cart-item__product">
          <img src="${product.image}" alt="${product.name}" class="cart-item__image" />
          <div class="cart-item__info">
            <h3 class="cart-item__title">${product.name}</h3>
          </div>
          <div class="cart-item__pricing">
            <span class="cart-item__current-price">${product.price}$</span>
            <button class="cart-item__remove" data-id="${product.id}">üóëÔ∏è</button>
          </div>
        </div>
      </div>
    `;
    container.insertAdjacentHTML("beforeend", html);
  });
}

// –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ —ñ–∑ newLaunches –¥–æ –∫–æ—Ä–∑–∏–Ω–∏
function addNewLaunchesToCart() {
  newLaunches.forEach((item) => {
    if (!cart.some((cartItem) => cartItem.id === item.id)) {
      cart.push(item);
    }
  });
  saveCart();
  renderItems();
  console.log("–¢–æ–≤–∞—Ä–∏ –∑ newLaunches –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏:", addedItems);
}

document.addEventListener("DOMContentLoaded", () => {
  const newLaunchesAddButton = document.getElementById("newLaunchesAdd");

  if (newLaunchesAddButton) {
    newLaunchesAddButton.addEventListener("click", () => {
      addNewLaunchesToCart();
      console.log("–¢–æ–≤–∞—Ä–∏ –∑ New Launches –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏");
    });
  } else {
    console.warn("–ö–Ω–æ–ø–∫–∞ #newLaunchesAdd –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!");
  }
});

// –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –∑ –∫–æ—Ä–∑–∏–Ω–∏
function removeFromCart(productId) {
  cart = cart.filter((product) => product.id !== productId);
  saveCart();
  renderItems();
}

// –î–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤
if (container) {
  container.addEventListener("click", (e) => {
    if (e.target.classList.contains("cart-item__remove")) {
      const productId = e.target.getAttribute("data-id");
      removeFromCart(productId);
    }
  });
}

// –î–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É"
document.addEventListener("click", (e) => {
  if (e.target.classList.contains("add-to-cart-btn")) {
    const productId = e.target.getAttribute("data-id");
    addToCart(productId);
  }
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(productId) {
  const allItems = [
    ...(topSellers || []),
    ...(trendingEarphones || []),
    ...(newLaunches || []),
  ];

  console.log("All Items:", allItems);

  const product = allItems.find(
    (item) => String(item.id) === String(productId)
  );

  if (cart.some((item) => item.id === productId)) {
    console.log("–¢–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω—ñ");
    return;
  }
  if (product) {
    cart.push(product);
    saveCart();
    renderItems();
    console.log("–¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏:", product);
  } else {
    console.warn("–¢–æ–≤–∞—Ä —ñ–∑ —Ç–∞–∫–∏–º ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ:", productId);
  }
}

// –°–ª—É—Ö–∞—á –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É"
document.addEventListener("click", (e) => {
  if (e.target.classList.contains("add-to-cart-btn")) {
    const productId = e.target.getAttribute("data-id");
    addToCart(productId);
  }
});

// –°–ª—É—Ö–∞—á –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–í–∏–¥–∞–ª–∏—Ç–∏ –∑ –∫–æ—Ä–∑–∏–Ω–∏"
if (container) {
  container.addEventListener("click", (e) => {
    if (e.target.classList.contains("cart-item__remove")) {
      const productId = e.target.getAttribute("data-id");
      removeFromCart(productId);
    }
  });
}

document.addEventListener("click", (e) => {
  if (e.target.classList.contains("add-to-cart-btn")) {
    const productId = e.target.getAttribute("data-id");
    addToCart(productId);
    console.log(`–¢–æ–≤–∞—Ä —ñ–∑ ID ${productId} –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏`);
  }
});

function handleNewLaunchesAddClick() {
  addNewLaunchesToCart();
  console.log("–¢–æ–≤–∞—Ä–∏ –∑ New Launches –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏");
}

function calculateTotal() {
  const total = cart.reduce((sum, product) => sum + product.price, 0);
  console.log(`–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${total}$`);
  return total;
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
loadCart();
addNewLaunchesToCart();
renderItems();
