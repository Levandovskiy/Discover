"use strict";

import { newLaunches } from "../db.js";

// –ú–∞—Å–∏–≤ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–æ–¥–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
export const addedNewLaunchesItems = [];

document.addEventListener("DOMContentLoaded", () => {
  // –û—Ç—Ä–∏–º—É—é DOM-–µ–ª–µ–º–µ–Ω—Ç–∏ —Å–ª–∞–π–¥–µ—Ä–∞ —Ç–∞ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
  const newLaunchesSlider = document.querySelector(
    ".main__new-launches_wrapper__card-slider_item"
  );
  const nextBtn = document.querySelector(
    ".main__new-launches_wrapper__card-slider_rbtn"
  );
  const prevBtn = document.querySelector(
    ".main__new-launches_wrapper__card-slider_lbtn"
  );

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—é –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤ —Ç–∞ —ñ–Ω–¥–µ–∫—Å –∞–∫—Ç–∏–≤–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏
  let cards = newLaunches;
  let currentIndex = 0;
  let totalCards = cards.length;

  // –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ä–µ–Ω–¥–µ—Ä—É –∫–∞—Ä—Ç–∫–∏
  function renderCard() {
    // –û—á–∏—â—É—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–æ–º –Ω–æ–≤–æ—ó –∫–∞—Ä—Ç–∫–∏
    newLaunchesSlider.innerHTML = "";

    // –û—Ç—Ä–∏–º—É—é –ø–æ—Ç–æ—á–Ω–∏–π —Ç–æ–≤–∞—Ä
    const product = cards[currentIndex];

    // –°—Ç–≤–æ—Ä—é—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç–∫–∏
    const item = document.createElement("div");
    item.classList.add(
      "main__new-launches_wrapper__card-slider_content",
      "active"
    );

    // –°—Ç–≤–æ—Ä—é—é –±–ª–æ–∫ –∫–æ–ª—å–æ—Ä—ñ–≤
    const colorsBlock = document.createElement("div");
    colorsBlock.classList.add(
      "main__new-launches_wrapper__card-slider_content__descr-colors"
    );

    let colorId = 0;
    let colorBtns = [];

    // –°—Ç–≤–æ—Ä—é—é –±–ª–æ–∫ –∑–æ–±—Ä–∞–∂–µ–Ω—å —Ç–æ–≤–∞—Ä—É
    const imgBlock = document.createElement("div");
    imgBlock.classList.add(
      "main__new-launches_wrapper__card-slider_content__img"
    );
    const img1Block = document.createElement("div");
    const img2Block = document.createElement("div");
    const img1 = document.createElement("img");
    const img2 = document.createElement("img");

    img1Block.classList.add("first");
    img2Block.classList.add("second");

    img1Block.appendChild(img1);
    img2Block.appendChild(img2);
    imgBlock.appendChild(img1Block);
    imgBlock.appendChild(img2Block);

    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—é –ø–æ—á–∞—Ç–∫–æ–≤—ñ —Ñ–æ—Ç–æ (–ø–µ—Ä—à–∏–π –∫–æ–ª—ñ—Ä)
    img1.src = product.colors[0].images[0];
    img2.src = product.colors[0].images[1];

    // –°—Ç–≤–æ—Ä—é—é –∫–Ω–æ–ø–∫–∏ –∫–æ–ª—å–æ—Ä—ñ–≤
    product.colors.forEach(({ name, hex, images }) => {
      const btn = document.createElement("button");
      btn.classList.add(
        "main__new-launches_wrapper__card-slider_content__descr-colors_item"
      );
      btn.id = colorId++;
      btn.setAttribute("title", name);
      btn.style.backgroundColor = hex;

      colorBtns.push(btn);
      colorsBlock.appendChild(btn);

      // –ü—Ä–∏ –∫–ª—ñ–∫—É –∑–º—ñ–Ω—é—é —Ñ–æ—Ç–æ —Ç–∞ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ–ª—ñ—Ä
      btn.addEventListener("click", () => {
        colorBtns.forEach((b) => b.classList.remove("active"));
        btn.classList.add("active");
        img1.src = images[0];
        img2.src = images[1];
      });
    });

    // HTML-–∫–æ–Ω—Ç–µ–Ω—Ç –æ–ø–∏—Å—É —Ç–æ–≤–∞—Ä—É
    const cardContent = `
      <div class="main__new-launches_wrapper__card-slider_content__descr">
        <div class="main__new-launches_wrapper__card-slider_content__descr-header">
          ${product.title}
        </div>
        <div class="main__new-launches_wrapper__card-slider_content__descr-text">
          ${product.descr}
          <a href="${product.link}"> Read More </a>
        </div>
        <div class="main__new-launches_wrapper__card-slider_content__descr-price">
          Price : <span> $${product.price} </span>
        </div>
        <div class="main__new-launches_wrapper__card-slider_content__descr-btns">
          <button class="add" id="newLaunchesAdd">Add to cart</button>
          <button class="more">
            <a href="${product.link}">Explore More</a>
          </button>
        </div>
      </div>
    `;

    // –í—Å—Ç–∞–≤–ª—è—é HTML —É –∫–∞—Ä—Ç–∫—É
    item.innerHTML = cardContent;

    // –í—Å—Ç–∞–≤–ª—è—é –±–ª–æ–∫ –∫–æ–ª—å–æ—Ä—ñ–≤ –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–∞–º–∏
    const descrBlock = item.querySelector(
      ".main__new-launches_wrapper__card-slider_content__descr"
    );
    descrBlock.insertBefore(
      colorsBlock,
      descrBlock.querySelector(
        ".main__new-launches_wrapper__card-slider_content__descr-btns"
      )
    );

    // –í—Å—Ç–∞–≤–ª—è—é –±–ª–æ–∫ –∑–æ–±—Ä–∞–∂–µ–Ω—å –ø–µ—Ä–µ–¥ –æ–ø–∏—Å–æ–º
    item.insertBefore(imgBlock, descrBlock);

    // –î–æ–¥–∞—é –∫–∞—Ä—Ç–∫—É –¥–æ —Å–ª–∞–π–¥–µ—Ä–∞
    newLaunchesSlider.appendChild(item);

    // –î–æ–¥–∞—é –ª–æ–≥—ñ–∫—É –∫–Ω–æ–ø–∫–∏ "Add to cart"
    const addBtn = item.querySelector(".add");
    addBtn.addEventListener("click", () => {
      const selectedColorBtn = item.querySelector(
        ".main__new-launches_wrapper__card-slider_content__descr-colors_item.active"
      );
      if (!selectedColorBtn) return;

      const activeImg = item.querySelector(
        ".main__new-launches_wrapper__card-slider_content__img img"
      );

      const cartItem = {
        title: product.title,
        price: product.price,
        color: selectedColorBtn.getAttribute("title"),
        img: activeImg.attributes[0].value,
      };

      // –ó—á–∏—Ç—É—é –∫–æ—Ä–∑–∏–Ω—É –∑ localStorage, –¥–æ–¥–∞—é —Ç–æ–≤–∞—Ä —ñ –∑–±–µ—Ä—ñ–≥–∞—é –Ω–∞–∑–∞–¥
      let existingCart = JSON.parse(localStorage.getItem("cart")) || [];
      existingCart.push(cartItem);
      localStorage.setItem("cart", JSON.stringify(existingCart));
      // –¥–ª—è –º–∏—Ç—Ç—î–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –≤ –∫–æ—Ä–∑–∏–Ω—ñ
      window.dispatchEvent(new Event("cartUpdated")); // –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó –≤–∫–ª–∞–¥–∫–∏
      if (typeof window.updateCartButton === "function") {
        window.updateCartButton(); // –º–∏—Ç—Ç—î–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
      }
    });
  }

  // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–≤–ø–µ—Ä–µ–¥"
  nextBtn.addEventListener("click", () => {
    currentIndex = (currentIndex + 1) % totalCards;
    renderCard();
  });

  // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥"
  prevBtn.addEventListener("click", () => {
    currentIndex = (currentIndex - 1 + totalCards) % totalCards;
    renderCard();
  });

  // üî∞ –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä–µ–Ω–¥–µ—Ä
  renderCard();
});
